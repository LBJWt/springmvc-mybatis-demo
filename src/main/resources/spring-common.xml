<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd" default-autowire="byType">
	<!-- Annotation Config -->	
	<context:annotation-config/>
	
	<!-- 扫描Service -->
	<context:component-scan base-package="com.smd.demo.service" />
	
	<!-- ***************资源文件************** -->
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:resources.properties" />
	<!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:resources.properties">
		</property>
	</bean>-->
	<!-- ***************配置数据源************** -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">	
		<property name="driverClassName" value="${jdbc_driver}"/> 
		<property name="url" value="${jdbc_url}" /> 
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
	</bean>
	
	<!-- ***************事务配置************** -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<aop:config>  
        <aop:advisor pointcut="execution(* com.smd.demo.service.*.*(..))" advice-ref="txAdvice" />  
    </aop:config>  
  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="get*" read-only="true" />  
            <tx:method name="query*" read-only="true" />  
            <tx:method name="find*" read-only="true" />  
            <tx:method name="load*" read-only="true" />
            <tx:method name="select*" read-only="true" />  
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />  
        </tx:attributes>  
    </tx:advice>  
	
	<!-- MyBatis Sql -->
	<bean id="mybatisSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	  	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	  	<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" autowire="byName">    
	    <property name="basePackage" value="com.smd.demo.mapper" />
	    <!-- 这样配置可以读取外部properties文件 -->
	    <property name="sqlSessionFactoryBeanName" value="mybatisSqlSessionFactory"/>
	</bean>
	
	<!-- 添加异常统一处理 -->
	<bean id="exceptionHandler" class="com.smd.demo.exception.BackExceptionHandler"/>
</beans>

